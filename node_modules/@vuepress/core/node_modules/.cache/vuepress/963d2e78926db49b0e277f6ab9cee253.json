{"remainingRequest":"/Users/zjb/Desktop/vuepress-theme-reco-demo-demo-1.x/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zjb/Desktop/vuepress-theme-reco-demo-demo-1.x/.vuepress/theme/components/Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zjb/Desktop/vuepress-theme-reco-demo-demo-1.x/.vuepress/theme/components/Navbar.vue","mtime":1640087980110},{"path":"/Users/zjb/Desktop/vuepress-theme-reco-demo-demo-1.x/node_modules/cache-loader/dist/cjs.js","mtime":1640009954515},{"path":"/Users/zjb/Desktop/vuepress-theme-reco-demo-demo-1.x/node_modules/babel-loader/lib/index.js","mtime":1640009954454},{"path":"/Users/zjb/Desktop/vuepress-theme-reco-demo-demo-1.x/node_modules/cache-loader/dist/cjs.js","mtime":1640009954515},{"path":"/Users/zjb/Desktop/vuepress-theme-reco-demo-demo-1.x/node_modules/vue-loader/lib/index.js","mtime":1640009954938}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBbGdvbGlhU2VhcmNoQm94IGZyb20gJ0BBbGdvbGlhU2VhcmNoQm94JwppbXBvcnQgU2VhcmNoQm94IGZyb20gJ0BTZWFyY2hCb3gnCmltcG9ydCBTaWRlYmFyQnV0dG9uIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL1NpZGViYXJCdXR0b24nCmltcG9ydCBOYXZMaW5rcyBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9OYXZMaW5rcycKaW1wb3J0IERheUFuZE5pZ2h0IGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL0RheUFuZE5pZ2h0JwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgU2lkZWJhckJ1dHRvbiwgTmF2TGlua3MsIFNlYXJjaEJveCwgQWxnb2xpYVNlYXJjaEJveCwgRGF5QW5kTmlnaHR9LAoKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpbmtzV3JhcE1heFdpZHRoOiBudWxsCiAgICB9CiAgfSwKCiAgbW91bnRlZCAoKSB7CiAgICBjb25zdCBNT0JJTEVfREVTS1RPUF9CUkVBS1BPSU5UID0gNzE5IC8vIHJlZmVyIHRvIGNvbmZpZy5zdHlsCiAgICBjb25zdCBOQVZCQVJfVkVSVElDQUxfUEFERElORyA9IHBhcnNlSW50KGNzcyh0aGlzLiRlbCwgJ3BhZGRpbmdMZWZ0JykpICsgcGFyc2VJbnQoY3NzKHRoaXMuJGVsLCAncGFkZGluZ1JpZ2h0JykpCiAgICBjb25zdCBoYW5kbGVMaW5rc1dyYXBXaWR0aCA9ICgpID0+IHsKICAgICAgaWYgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCA8IE1PQklMRV9ERVNLVE9QX0JSRUFLUE9JTlQpIHsKICAgICAgICB0aGlzLmxpbmtzV3JhcE1heFdpZHRoID0gbnVsbAogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMubGlua3NXcmFwTWF4V2lkdGggPSB0aGlzLiRlbC5vZmZzZXRXaWR0aCAtIE5BVkJBUl9WRVJUSUNBTF9QQURESU5HIC0KICAgICAgICAgICh0aGlzLiRyZWZzLnNpdGVOYW1lICYmIHRoaXMuJHJlZnMuc2l0ZU5hbWUub2Zmc2V0V2lkdGggfHwgMCkKICAgICAgfQogICAgfQogICAgaGFuZGxlTGlua3NXcmFwV2lkdGgoKQogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZUxpbmtzV3JhcFdpZHRoLCBmYWxzZSkKICB9LAoKICBjb21wdXRlZDogewogICAgYWxnb2xpYSAoKSB7CiAgICAgIHJldHVybiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5hbGdvbGlhIHx8IHRoaXMuJHRoZW1lQ29uZmlnLmFsZ29saWEgfHwge30KICAgIH0sCgogICAgaXNBbGdvbGlhU2VhcmNoICgpIHsKICAgICAgcmV0dXJuIHRoaXMuYWxnb2xpYSAmJiB0aGlzLmFsZ29saWEuYXBpS2V5ICYmIHRoaXMuYWxnb2xpYS5pbmRleE5hbWUKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICB0aHJvdHRsZSAoZnVuYywgZGVsYXkpIHsKICAgICAgbGV0IHRpbWVyID0gbnVsbAogICAgICBsZXQgc3RhcnRUaW1lID0gRGF0ZS5ub3coKQoKICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zdCBjdXJUaW1lID0gRGF0ZS5ub3coKQogICAgICAgIGNvbnN0IHJlbWFpbmluZyA9IGRlbGF5IC0gKGN1clRpbWUgLSBzdGFydFRpbWUpCiAgICAgICAgY29uc3QgY29udGV4dCA9IHRoaXMKICAgICAgICBjb25zdCBhcmdzID0gYXJndW1lbnRzCgogICAgICAgIGNsZWFyVGltZW91dCh0aW1lcikKICAgICAgICBpZiAocmVtYWluaW5nIDw9IDApIHsKICAgICAgICAgIGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncykKICAgICAgICAgIHN0YXJ0VGltZSA9IERhdGUubm93KCkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmMsIHJlbWFpbmluZykKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0KCmZ1bmN0aW9uIGNzcyAoZWwsIHByb3BlcnR5KSB7CiAgLy8gTk9URTogS25vd24gYnVnLCB3aWxsIHJldHVybiAnYXV0bycgaWYgc3R5bGUgdmFsdWUgaXMgJ2F1dG8nCiAgY29uc3Qgd2luID0gZWwub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldwogIC8vIG51bGwgbWVhbnMgbm90IHRvIHJldHVybiBwc2V1ZG8gc3R5bGVzCiAgcmV0dXJuIHdpbi5nZXRDb21wdXRlZFN0eWxlKGVsLCBudWxsKVtwcm9wZXJ0eV0KfQo="},{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Navbar.vue","sourceRoot":".vuepress/theme/components","sourcesContent":["<template>\n  <header class=\"navbar\">\n    <SidebarButton @toggle-sidebar=\"$emit('toggle-sidebar')\"/>\n\n    <router-link\n      :to=\"$localePath\"\n      class=\"home-link\">\n      <img\n        class=\"logo\"\n        v-if=\"$themeConfig.logo\"\n        :src=\"$withBase($themeConfig.logo)\"\n        :alt=\"$siteTitle\">\n      <span\n        ref=\"siteName\"\n        class=\"site-name\"\n        v-if=\"$siteTitle\">{{ $siteTitle }}</span>\n    </router-link>\n\n    <div\n      class=\"links\"\n      :style=\"linksWrapMaxWidth ? {\n        'max-width': linksWrapMaxWidth + 'px'\n      } : {}\">\n\n      <DayAndNight />\n      <AlgoliaSearchBox\n        v-if=\"isAlgoliaSearch\"\n        :options=\"algolia\"/>\n      <SearchBox v-else-if=\"$themeConfig.search !== false && $frontmatter.search !== false\"/>\n      <NavLinks class=\"can-hide\"/>\n    </div>\n  </header>\n</template>\n\n<script>\nimport AlgoliaSearchBox from '@AlgoliaSearchBox'\nimport SearchBox from '@SearchBox'\nimport SidebarButton from '@theme/components/SidebarButton'\nimport NavLinks from '@theme/components/NavLinks'\nimport DayAndNight from '@theme/components/DayAndNight'\n\nexport default {\n  components: { SidebarButton, NavLinks, SearchBox, AlgoliaSearchBox, DayAndNight},\n\n  data () {\n    return {\n      linksWrapMaxWidth: null\n    }\n  },\n\n  mounted () {\n    const MOBILE_DESKTOP_BREAKPOINT = 719 // refer to config.styl\n    const NAVBAR_VERTICAL_PADDING = parseInt(css(this.$el, 'paddingLeft')) + parseInt(css(this.$el, 'paddingRight'))\n    const handleLinksWrapWidth = () => {\n      if (document.documentElement.clientWidth < MOBILE_DESKTOP_BREAKPOINT) {\n        this.linksWrapMaxWidth = null\n      } else {\n        this.linksWrapMaxWidth = this.$el.offsetWidth - NAVBAR_VERTICAL_PADDING -\n          (this.$refs.siteName && this.$refs.siteName.offsetWidth || 0)\n      }\n    }\n    handleLinksWrapWidth()\n    window.addEventListener('resize', handleLinksWrapWidth, false)\n  },\n\n  computed: {\n    algolia () {\n      return this.$themeLocaleConfig.algolia || this.$themeConfig.algolia || {}\n    },\n\n    isAlgoliaSearch () {\n      return this.algolia && this.algolia.apiKey && this.algolia.indexName\n    }\n  },\n\n  methods: {\n    throttle (func, delay) {\n      let timer = null\n      let startTime = Date.now()\n\n      return function () {\n        const curTime = Date.now()\n        const remaining = delay - (curTime - startTime)\n        const context = this\n        const args = arguments\n\n        clearTimeout(timer)\n        if (remaining <= 0) {\n          func.apply(context, args)\n          startTime = Date.now()\n        } else {\n          timer = setTimeout(func, remaining)\n        }\n      }\n    }\n  }\n}\n\nfunction css (el, property) {\n  // NOTE: Known bug, will return 'auto' if style value is 'auto'\n  const win = el.ownerDocument.defaultView\n  // null means not to return pseudo styles\n  return win.getComputedStyle(el, null)[property]\n}\n</script>\n\n<style lang=\"stylus\">\n@require '../styles/mode.styl'\n\n$navbar-vertical-padding = 0.7rem\n$navbar-horizontal-padding = 1.5rem\n\n.navbar\n  padding $navbar-vertical-padding $navbar-horizontal-padding\n  line-height $navbarHeight + 1.4rem\n  // box-shadow var(--box-shadow)\n  // background var(--background-color)google-fonts.scss\n  a, span, img\n    display inline-block\n  .home-link\n    margin-left 3rem\n  .logo\n    height $navbarHeight - 1.4rem\n    min-width $navbarHeight - 1.4rem\n    margin-right 0.8rem\n    vertical-align middle\n    border-radius 50%\n  .site-name\n    font-size 1.2rem\n    font-weight 600\n    color white\n    position relative\n  .links\n    z-index 1\n    padding-left 1.5rem\n    box-sizing border-box\n    white-space nowrap\n    font-size 0.9rem\n    position absolute\n    right $navbar-horizontal-padding\n    top $navbar-vertical-padding\n    display flex\n    // background-color var(--background-color)\n    .search-box\n      flex: 0 0 auto\n      vertical-align top\n      color white\n\n@media (max-width: $MQMobile)\n  .navbar\n    padding-left 4rem\n    .can-hide\n      display none\n    .links\n      padding-left .2rem\n    .home-link\n      margin-left 0\n      span\n        display none\n</style>\n"]}]}